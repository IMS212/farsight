buildscript {
    dependencies {
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}

plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0.14,6.2)'
    id 'org.spongepowered.mixin' version '0.7.+'
}

version = "${mc_version}-${mod_version}"
group = "com.${modid}" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "${modid}"

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: mappings_channel, version: mappings_version

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            property 'mixin.debug', 'true'
            property 'mixin.debug.export', 'true'
            property 'forge.logging.console.level', 'debug'
            property 'forge.logging.markers', 'REGISTRIES'

            workingDirectory project.file('run')
            arg "-mixin.config="+archivesBaseName+".mixins.json"


            mods {
                modid {
                    source sourceSets.main
                }
            }
        }

        server {
            property 'mixin.debug', 'true'
            property 'mixin.debug.export', 'true'
            property 'forge.logging.console.level', 'debug'
            property 'forge.logging.markers', 'REGISTRIES'

            workingDirectory project.file('run')
            arg "-mixin.config="+archivesBaseName+".mixins.json"
            arg "nogui"

            mods {
                modid {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            //property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            args '--mod', '${modid}', '--all', '--output', file('src/generated/resources/'), '--existing', sourceSets.main.resources.srcDirs[0]
            mods {
                modid {
                    source sourceSets.main
                }
            }
        }

    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories{
    mavenLocal()
    flatDir { dirs 'libs' }
    mavenCentral()

    maven {
        url "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

mixin {
    add sourceSets.main, "${modid}.refmap.json"
}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}" //21

    annotationProcessor "org.spongepowered:mixin:0.8.5:processor"
    implementation fg.deobf("curse.maven:cupboard-326652:4669193")
}

jar {
    manifest {
        attributes([
                "Specification-Title": "${modid}",
                "Specification-Vendor": "${modid}",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"${modid}",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs": "${modid}.mixins.json"
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        register('mavenJava', MavenPublication) {
            artifact jar
        }
    }
}
